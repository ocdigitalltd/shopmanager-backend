name: Deploy to CloudJiffy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.17.0'

    - name: Install dependencies
      run: npm install

    - name: Build the project
      run: npm run build

    - name: Deploy to CloudJiffy
      env:
        SSH_KEY_BASE64: ${{ secrets.SSH_KEY_BASE64 }}
        CLOUDJIFFY_USERNAME: ${{ secrets.SSH_USERNAME }}
        CLOUDJIFFY_HOST: ${{ secrets.SSH_HOST }}
        SSH_PORT: ${{ secrets.SSH_PORT }}
      run: |
        mkdir -p ~/.ssh

        # Decode and save the SSH key
        echo "$SSH_KEY_BASE64" | base64 --decode > ~/.ssh/id_rsa

        # Display the decoded key for debugging
        echo "### Debug: Display the decoded SSH key ###"
        cat ~/.ssh/id_rsa

        chmod 600 ~/.ssh/id_rsa

        # Scan and add the host key to known_hosts
        ssh-keyscan -p $SSH_PORT $CLOUDJIFFY_HOST >> ~/.ssh/known_hosts

        # Display known_hosts for debugging
        echo "### Debug: Display the known_hosts file ###"
        cat ~/.ssh/known_hosts

        # Attempt to SSH into the server to remove existing project files
        ssh -vvv -p $SSH_PORT $CLOUDJIFFY_USERNAME@$CLOUDJIFFY_HOST <<EOF
          rm -rf /home/jelastic/ROOT/*
        EOF

        # Use SFTP to transfer files
        sftp -vvv -P $SSH_PORT $CLOUDJIFFY_USERNAME@$CLOUDJIFFY_HOST <<EOF
          put -r ./dist /home/jelastic/ROOT
          put package.json /home/jelastic/ROOT
          put package-lock.json /home/jelastic/ROOT
          put forever.json /home/jelastic/ROOT
        EOF

        # Perform post-deployment actions
        ssh -vvv -p $SSH_PORT $CLOUDJIFFY_USERNAME@$CLOUDJIFFY_HOST <<EOF
          cd ROOT &&
          npm install && pm2 restart nodejs-parsing-tool
        EOF
      shell: /usr/bin/bash -e {0}
